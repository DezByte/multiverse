<!-- Build file for ANT -->

<project name="Multiverse" default="dist">

    <property name="application.name" value="multiverse"/>
    <property name="application.version" value="0.1"/>

    <property name="src" value="src"/>
    <property name="src.main" value="${src}/main"/>
    <property name="src.boot" value="${src}/boot"/>
    <property name="src.test" value="${src}/test"/>

    <property name="lib" value="lib"/>
    <property name="lib.provided" value="${lib}/provided"/>
    <property name="lib.support" value="${lib}/support"/>

    <property name="target" value="target"/>
    <property name="dist" value="${target}/dist"/>
    <property name="classes.main" value="${target}/classes.main"/>
    <property name="classes.test" value="${target}/classes.test"/>
    <property name="classes.boot" value="${target}/classes.boot"/>

    <property name="javadoc" value="${target}/javadoc"/>
    <property name="unitreports" value="${target}/junit-reports"/>

    <path id="classpath.provided">
        <fileset dir="${lib.provided}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.support">
        <fileset dir="${lib.support}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="clean"
            description="Removes all generated files">

        <delete dir="${target}"/>
    </target>

    <target name="init">
        <tstamp/>
    </target>

    <target name="compile.main"
            description="Compiles the sources of the main package"
            depends="init">

        <mkdir dir="${classes.main}"/>

        <javac debug="on"
               srcdir="${src.main}"
               destdir="${classes.main}"
               source="1.5">
            <classpath>
                <path refid="classpath.provided"/>
            </classpath>
        </javac>

        <copy todir="${classes.main}">
            <fileset dir="${src.main}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.test"
            description="Compiles the sources of the test package"
            depends="compile.main">

        <mkdir dir="${classes.test}"/>

        <javac debug="on"
               srcdir="${src.test}"
               destdir="${classes.test}"
               source="1.5">
            <classpath>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
                <path path="${classes.main}"/>
            </classpath>
        </javac>

        <copy todir="${classes.test}">
            <fileset dir="${src.test}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="jar.boot"
            description="Creates the bootjar containing access to the protected stuff">

        <mkdir dir="${classes.boot}"/>

        <javac debug="on"
               srcdir="${src.boot}"
               destdir="${classes.boot}"
               source="1.5"/>

        <jar jarfile="${target}/boot.jar"
             basedir="${classes.boot}"/>
    </target>

    <target name="compile.all"
            description="Compiles all the sources"
            depends="compile.main, compile.test"/>

    <target name="javadoc"
            description="Generates the Javadoc"
            depends="compile.main">

        <mkdir dir="${javadoc}"/>

        <javadoc packagenames="org.multiverse.*"
                 sourcepath="${src.main}"
                 defaultexcludes="yes"
                 destdir="${javadoc}"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="Multiverse API">
            <doctitle><![CDATA[<h1>Multiverse</h1>]]></doctitle>
            <tag name="todo" scope="all" description="To do:"/>
        </javadoc>
    </target>

    <target name="jar"
            depends="compile.main"
            description="Builds the jar without including dependant jars">

        <unzip dest="${classes.main}">
            <fileset dir="${lib.provided}">
                <include name="*.jar"/>
            </fileset>
        </unzip>

        <jar jarfile="${target}/${application.name}-${application.version}.jar"
             basedir="${classes.main}">
            <manifest>
                <attribute name="Premain-Class" value="org.multiverse.instrumentation.MultiverseJavaAgent"/>
            </manifest>
        </jar>
    </target>

    <target name="test"
            description="Runs the standard unit tests"
            depends="compile.test, jar">

        <mkdir dir="${unitreports}"/>

        <junit printsummary="yes" haltonfailure="yes">

            <jvmarg value="-Xbootclasspath/a:${lib.provided}/boot.jar"/>
            <jvmarg value="-javaagent:${target}/${application.name}-${application.version}.jar"/>

            <classpath>
                <pathelement location="${classes.test}"/>
                <pathelement location="${classes.main}"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${unitreports}">
                <fileset dir="${src.test}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*Test.java"/>
                    <exclude name="**/*StressTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.stress"
            description="Runs the stress tests (can take a long time)"
            depends="compile.test,jar">

        <mkdir dir="${unitreports}"/>

        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${classes.test}"/>
                <pathelement location="${classes.main}"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${unitreports}">
                <fileset dir="${src.test}">
                    <include name="**/*StressTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.all"
            description="Runs all tests in the system"
            depends="test, test.stress"/>

    <target name="dist"
            description="Builds the complete distribution"
            depends="clean, compile.main, test, javadoc, jar">

        <zip destfile="${target}/sources.zip">
            <zipfileset dir="${src.main}" prefix="src"/>
        </zip>

        <zip destfile="${target}/${application.name}-${application.version}.zip">
            <zipfileset dir="${javadoc}" prefix="javadoc"/>
            <fileset dir="${target}" includes="*.jar"/>
            <fileset dir="${target}" includes="sources.zip"/>
        </zip>
    </target>

    <target name="run" description="Runs a few examples.. (is going to be removed)" depends="jar">
        <java classname="org.multiverse.instrumentation.TestRunningMain" fork="true">
            <jvmarg value="-Xbootclasspath/a:${lib.provided}/boot.jar"/>
            <jvmarg value="-javaagent:${target}/${application.name}-${application.version}.jar"/>
        </java>
    </target>

</project>
