#summary Recommended Literature for developers

= Recommended literature =

STM literature:
  * [https://urresearch.rochester.edu/handle/1802/4051 What Really Makes Transactions Faster?]
  * [http://research.sun.com/scalable/pubs/DISC2006.pdf Transactional Locking 2]
  * [http://www.amazon.com/Transactional-Synthesis-Lectures-Computer-Architecture/dp/1598291246/ref=sr_1_1?ie=UTF8&s=books&qid=1242680680&sr=1-1 Transactional Memory (Synthesis Lectures on Computer Architecture)]
  * [http://www.amazon.com/Art-Multiprocessor-Programming-Maurice-Herlihy/dp/0123705916 The Art of Multiprocessor Programming]

General purpose concurrency literature:
  * [http://www.amazon.com/Concurrent-Programming-Java-TM-Principles/dp/0201310090/ref=sr_1_1?ie=UTF8&s=books&qid=1244896138&sr=8-1 Concurrent Programming in Java(TM): Design Principles and Pattern (2nd Edition)]
  * [http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601/ref=sr_1_1?ie=UTF8&s=books&qid=1242680643&sr=1-1 Java Concurrency in Practice]
  * [http://www.amazon.com/Art-Multiprocessor-Programming-Maurice-Herlihy/dp/0123705916 The Art of Multiprocessor Programming]

MVCC Literature:
 * [http://www.amazon.com/Expert-Oracle-Database-Architecture-Programming/dp/1590595300/ref=sr_1_1?ie=UTF8&s=books&qid=1244887499&sr=8-1 Expert Oracle Database Architecture: 9i and 10g Programming Techniques and Solutions] or one of the other books of Thomas Kyte.

Literature for writing microbenchmarks:
 * [http://www.ibm.com/developerworks/java/library/j-jtp02225.html Java theory and practice: Anatomy of a flawed microbenchmark]
  