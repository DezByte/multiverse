<!-- Build file for ANT -->

<project name="Multiverse" default="dist">

    <property name="application.name" value="multiverse"/>
    <property name="application.version" value="0.3"/>

    <property environment="env"/>
    <property name="src" value="src"/>
    <property name="src.main" value="${src}/main"/>
    <property name="src.test" value="${src}/test"/>

    <property name="lib" value="lib"/>
    <property name="lib.provided" value="${lib}/provided"/>
    <property name="lib.support" value="${lib}/support"/>

    <property name="target" value="target"/>
    <property name="dist" value="${target}/dist"/>
    <property name="classes.main" value="${target}/classes/production"/>
    <property name="classes.test" value="${target}/classes/test"/>

    <property name="javadoc" value="${target}/javadoc"/>
    <property name="unit.reports" value="${target}/junit-reports"/>
    <property name="pmd.reports" value="${target}/pmd-reports"/>
    <property name="findbugs.reports" value="${target}/findbugs-reports"/>
    <property name="findbugs.home" value="${env.FINDBUGS_HOME}"/>

    <path id="classpath.provided">
        <fileset dir="${lib.provided}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.support">
        <fileset dir="${lib.support}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath.findbugs">
        <fileset dir="${findbugs.home}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="clean"
            description="Removes all generated files">

        <delete dir="${target}"/>
    </target>

    <target name="init">
        <tstamp/>
    </target>

    <target name="compile.main"
            description="Compiles the sources of the main package"
            depends="init">

        <mkdir dir="${classes.main}"/>

        <javac debug="on"
               srcdir="${src.main}"
               destdir="${classes.main}"
               target="1.6"
               source="1.6">
            <classpath>
                <path refid="classpath.provided"/>
            </classpath>
        </javac>

        <copy todir="${classes.main}">
            <fileset dir="${src.main}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.test"
            description="Compiles the sources of the test package"
            depends="compile.main">

        <mkdir dir="${classes.test}"/>

        <javac debug="on"
               srcdir="${src.test}"
               destdir="${classes.test}"
               source="1.6">
            <classpath>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
                <path path="${classes.main}"/>
            </classpath>
        </javac>

        <copy todir="${classes.test}">
            <fileset dir="${src.test}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.all"
            description="Compiles all the sources"
            depends="compile.main, compile.test"/>

    <target name="javadoc"
            description="Generates the Javadoc"
            depends="compile.main">

        <mkdir dir="${javadoc}"/>

        <javadoc packagenames="org.multiverse.*"
                 sourcepath="${src.main}"
                 defaultexcludes="yes"
                 destdir="${javadoc}"
                 author="true"
                 version="true"
                 use="true"
                 windowtitle="Multiverse API">
            <doctitle><![CDATA[<h1>Multiverse</h1>]]></doctitle>
            <tag name="todo" scope="all" description="To do:"/>
        </javadoc>
    </target>

    <target name="jar"
            depends="compile.main"
            description="Builds the jar without including dependant jars">

        <unzip dest="${classes.main}">
            <fileset dir="${lib.provided}">
                <include name="asm*.jar"/>
            </fileset>
        </unzip>

        <jar jarfile="${target}/${application.name}-${application.version}.jar"
             basedir="${classes.main}">
            <manifest>
                <attribute name="Premain-Class"
                           value="org.multiverse.stms.alpha.instrumentation.MultiverseJavaAgent"/>
            </manifest>
        </jar>
    </target>

    <target name="test"
            description="Runs the standard unit tests"
            depends="compile.test, jar">

        <mkdir dir="${unit.reports}"/>

        <junit printsummary="yes" haltonfailure="false">

            <jvmarg value="-Xbootclasspath/a:${lib.provided}/boot.jar"/>
            <jvmarg value="-javaagent:${target}/${application.name}-${application.version}.jar"/>

            <classpath>
                <pathelement location="${classes.test}"/>
                <pathelement location="${classes.main}"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${unit.reports}">
                <fileset dir="${src.test}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*Test.java"/>
                    <exclude name="**/*StressTest.java"/>
                    <exclude name="**/*LongTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.long"
            description="Runs the stress tests (can take a long time)"
            depends="compile.test,jar">

        <mkdir dir="${unit.reports}"/>

        <junit printsummary="yes" haltonfailure="yes">
            <jvmarg value="-Xbootclasspath/a:${lib.provided}/boot.jar"/>
            <jvmarg value="-javaagent:${target}/${application.name}-${application.version}.jar"/>

            <classpath>
                <pathelement location="${classes.test}"/>
                <pathelement location="${classes.main}"/>
                <path refid="classpath.provided"/>
                <path refid="classpath.support"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${unit.reports}">
                <fileset dir="${src.test}">
                    <include name="**/*StressTest.java"/>
                    <include name="**/*LongTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="test.all"
            description="Runs all tests in the system"
            depends="test, test.long"/>

    <target name="dist"
            description="Builds the complete distribution"
            depends="clean, compile.main, javadoc, jar">

        <zip destfile="${target}/sources.zip">
            <zipfileset dir="${src.main}" prefix="src"/>
        </zip>

        <zip destfile="${target}/${application.name}-${application.version}.zip">
            <zipfileset dir="${javadoc}" prefix="javadoc"/>
            <fileset dir="${target}" includes="*.jar"/>
            <fileset dir="${target}" includes="sources.zip"/>
            <fileset dir="." includes="license.*"/>
            <fileset dir="." includes="license.*"/>
        </zip>
    </target>

    <target name="run" description="Runs a few examples.. (is going to be removed)" depends="jar">
        <java classname="org.multiverse.stms.alpha.instrumentation.TestRunningMain" fork="true">
            <jvmarg value="-javaagent:${target}/${application.name}-${application.version}.jar"/>
        </java>
    </target>

    <target name="pmd"
            description="Creates a PMD report"
            depends="compile.main">

        <taskdef name="pmd"
                 classname="net.sourceforge.pmd.ant.PMDTask">
            <classpath>
                <path refid="classpath.support"/>
                <path refid="classpath.provided"/>
            </classpath>
        </taskdef>

        <mkdir dir="${pmd.reports}"/>

        <pmd shortFilenames="true">
            <ruleset>rulesets/favorites.xml</ruleset>
            <ruleset>basic</ruleset>
            <formatter type="html" toFile="${pmd.reports}/pmd_report.html"
                       linkPrefix="http://pmd.sourceforge.net/xref/"/>
            <fileset dir="${src.main}">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>

    <target name="findbugs"
            description="Creates the FindBugs report"
            depends="compile.main">

        <!--
       for more information see the following url:
       https://fisheye.springsource.org/browse/~raw,r=94/dm-server-samples/hello-integrationtests-test/main-branches/jersey/hello-integrationtests-testing/spring-build/lib/findbugs/doc/manualinstrumentation/datamining.html
        -->

        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
            <classpath>
                <path refid="classpath.findbugs"/>
            </classpath>
        </taskdef>

        <mkdir dir="${findbugs.reports}"/>

        <findbugs home="${findbugs.home}"
                  output="html"
                  outputFile="${findbugs.reports}/Findbugs-${application.name}-${application.version}.html"
                  reportLevel="experimental"
                  workHard="true"
                  stylesheet="fancy.xsl"
                  effort="max"
                  adjustExperimental="true"
                  failOnError="true"
                  projectName="${application.name}-${application.version}">
            <class location="${classes.main}"/>
        </findbugs>
    </target>

 
</project>
